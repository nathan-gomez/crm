definitions:
  controllers.UserData.Request:
    properties:
      token:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.OkResponse:
    properties:
      message:
        type: string
    type: object
  models.RegisterRequest:
    properties:
      password:
        type: string
      role:
        type: string
      username:
        type: string
    required:
    - password
    - role
    - username
    type: object
info:
  contact: {}
paths:
  /users/create-user:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: OK
          schema:
            $ref: '#/definitions/models.OkResponse'
        "400":
          description: ' '
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: ' '
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create new user
      tags:
      - Users
  /users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/models.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OkResponse'
        "400":
          description: ' '
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: ' '
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: ' '
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Login the user
      tags:
      - Users
  /users/logout:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.OkResponse'
        "400":
          description: ' '
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: ' '
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Logout current session
      tags:
      - Users
  /users/user-data:
    post:
      consumes:
      - application/json
      parameters:
      - description: ' '
        in: body
        name: Body
        required: true
        schema:
          $ref: '#/definitions/controllers.UserData.Request'
      - description: ApiKey header
        in: header
        name: x-api-key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "500":
          description: ' '
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      security:
      - ApiKeyAuth: []
      summary: Gets data of current user
      tags:
      - Users
swagger: "2.0"
